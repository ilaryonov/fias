// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0
// 	protoc        v3.7.1
// source: domain/address/delivery/grpc/address/address.proto

package address_grpc

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type GuidRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Guid string `protobuf:"bytes,1,opt,name=guid,proto3" json:"guid,omitempty"`
}

func (x *GuidRequest) Reset() {
	*x = GuidRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_address_delivery_grpc_address_address_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuidRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuidRequest) ProtoMessage() {}

func (x *GuidRequest) ProtoReflect() protoreflect.Message {
	mi := &file_domain_address_delivery_grpc_address_address_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuidRequest.ProtoReflect.Descriptor instead.
func (*GuidRequest) Descriptor() ([]byte, []int) {
	return file_domain_address_delivery_grpc_address_address_proto_rawDescGZIP(), []int{0}
}

func (x *GuidRequest) GetGuid() string {
	if x != nil {
		return x.Guid
	}
	return ""
}

type TermRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Term  string `protobuf:"bytes,1,opt,name=term,proto3" json:"term,omitempty"`
	Count int64  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *TermRequest) Reset() {
	*x = TermRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_address_delivery_grpc_address_address_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TermRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TermRequest) ProtoMessage() {}

func (x *TermRequest) ProtoReflect() protoreflect.Message {
	mi := &file_domain_address_delivery_grpc_address_address_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TermRequest.ProtoReflect.Descriptor instead.
func (*TermRequest) Descriptor() ([]byte, []int) {
	return file_domain_address_delivery_grpc_address_address_proto_rawDescGZIP(), []int{1}
}

func (x *TermRequest) GetTerm() string {
	if x != nil {
		return x.Term
	}
	return ""
}

func (x *TermRequest) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type Address struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID         int64  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Aoguid     string `protobuf:"bytes,2,opt,name=Aoguid,proto3" json:"Aoguid,omitempty"`
	Aolevel    string `protobuf:"bytes,3,opt,name=Aolevel,proto3" json:"Aolevel,omitempty"`
	Parentguid string `protobuf:"bytes,4,opt,name=Parentguid,proto3" json:"Parentguid,omitempty"`
	Shortname  string `protobuf:"bytes,5,opt,name=Shortname,proto3" json:"Shortname,omitempty"`
	Formalname string `protobuf:"bytes,6,opt,name=Formalname,proto3" json:"Formalname,omitempty"`
	Postalcode string `protobuf:"bytes,7,opt,name=Postalcode,proto3" json:"Postalcode,omitempty"`
}

func (x *Address) Reset() {
	*x = Address{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_address_delivery_grpc_address_address_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Address) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Address) ProtoMessage() {}

func (x *Address) ProtoReflect() protoreflect.Message {
	mi := &file_domain_address_delivery_grpc_address_address_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Address.ProtoReflect.Descriptor instead.
func (*Address) Descriptor() ([]byte, []int) {
	return file_domain_address_delivery_grpc_address_address_proto_rawDescGZIP(), []int{2}
}

func (x *Address) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Address) GetAoguid() string {
	if x != nil {
		return x.Aoguid
	}
	return ""
}

func (x *Address) GetAolevel() string {
	if x != nil {
		return x.Aolevel
	}
	return ""
}

func (x *Address) GetParentguid() string {
	if x != nil {
		return x.Parentguid
	}
	return ""
}

func (x *Address) GetShortname() string {
	if x != nil {
		return x.Shortname
	}
	return ""
}

func (x *Address) GetFormalname() string {
	if x != nil {
		return x.Formalname
	}
	return ""
}

func (x *Address) GetPostalcode() string {
	if x != nil {
		return x.Postalcode
	}
	return ""
}

var File_domain_address_delivery_grpc_address_address_proto protoreflect.FileDescriptor

var file_domain_address_delivery_grpc_address_address_proto_rawDesc = []byte{
	0x0a, 0x32, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x2f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x2f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x67, 0x72,
	0x70, 0x63, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x21, 0x0a,
	0x0b, 0x47, 0x75, 0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x67, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x67, 0x75, 0x69, 0x64,
	0x22, 0x37, 0x0a, 0x0b, 0x54, 0x65, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x65, 0x72, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x65, 0x72, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xc9, 0x01, 0x0a, 0x07, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6f, 0x67, 0x75, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x6f, 0x67, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x41, 0x6f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x41, 0x6f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x67, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x67, 0x75, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x68, 0x6f, 0x72, 0x74,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x68, 0x6f, 0x72,
	0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x46, 0x6f, 0x72, 0x6d, 0x61,
	0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x6f, 0x73, 0x74, 0x61,
	0x6c, 0x63, 0x6f, 0x64, 0x65, 0x32, 0xb2, 0x02, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12, 0x5d, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x42,
	0x79, 0x47, 0x75, 0x69, 0x64, 0x12, 0x19, 0x2e, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x75, 0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x15, 0x2e, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12,
	0x16, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x2f, 0x7b, 0x67, 0x75, 0x69, 0x64, 0x7d, 0x12, 0x57, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x43, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x15, 0x2e, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x12, 0x0e,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x69, 0x74, 0x69, 0x65, 0x73, 0x30, 0x01,
	0x12, 0x68, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x69, 0x74, 0x69, 0x65, 0x73, 0x42, 0x79, 0x54,
	0x65, 0x72, 0x6d, 0x12, 0x19, 0x2e, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15,
	0x2e, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x69, 0x74, 0x79, 0x62, 0x79, 0x74, 0x65, 0x72,
	0x6d, 0x2f, 0x7b, 0x74, 0x65, 0x72, 0x6d, 0x7d, 0x30, 0x01, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_domain_address_delivery_grpc_address_address_proto_rawDescOnce sync.Once
	file_domain_address_delivery_grpc_address_address_proto_rawDescData = file_domain_address_delivery_grpc_address_address_proto_rawDesc
)

func file_domain_address_delivery_grpc_address_address_proto_rawDescGZIP() []byte {
	file_domain_address_delivery_grpc_address_address_proto_rawDescOnce.Do(func() {
		file_domain_address_delivery_grpc_address_address_proto_rawDescData = protoimpl.X.CompressGZIP(file_domain_address_delivery_grpc_address_address_proto_rawDescData)
	})
	return file_domain_address_delivery_grpc_address_address_proto_rawDescData
}

var file_domain_address_delivery_grpc_address_address_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_domain_address_delivery_grpc_address_address_proto_goTypes = []interface{}{
	(*GuidRequest)(nil), // 0: address_grpc.GuidRequest
	(*TermRequest)(nil), // 1: address_grpc.TermRequest
	(*Address)(nil),     // 2: address_grpc.Address
	(*empty.Empty)(nil), // 3: google.protobuf.Empty
}
var file_domain_address_delivery_grpc_address_address_proto_depIdxs = []int32{
	0, // 0: address_grpc.AddressHandler.GetByGuid:input_type -> address_grpc.GuidRequest
	3, // 1: address_grpc.AddressHandler.GetAllCities:input_type -> google.protobuf.Empty
	1, // 2: address_grpc.AddressHandler.GetCitiesByTerm:input_type -> address_grpc.TermRequest
	2, // 3: address_grpc.AddressHandler.GetByGuid:output_type -> address_grpc.Address
	2, // 4: address_grpc.AddressHandler.GetAllCities:output_type -> address_grpc.Address
	2, // 5: address_grpc.AddressHandler.GetCitiesByTerm:output_type -> address_grpc.Address
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_domain_address_delivery_grpc_address_address_proto_init() }
func file_domain_address_delivery_grpc_address_address_proto_init() {
	if File_domain_address_delivery_grpc_address_address_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_domain_address_delivery_grpc_address_address_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuidRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_address_delivery_grpc_address_address_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TermRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_address_delivery_grpc_address_address_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Address); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_domain_address_delivery_grpc_address_address_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_domain_address_delivery_grpc_address_address_proto_goTypes,
		DependencyIndexes: file_domain_address_delivery_grpc_address_address_proto_depIdxs,
		MessageInfos:      file_domain_address_delivery_grpc_address_address_proto_msgTypes,
	}.Build()
	File_domain_address_delivery_grpc_address_address_proto = out.File
	file_domain_address_delivery_grpc_address_address_proto_rawDesc = nil
	file_domain_address_delivery_grpc_address_address_proto_goTypes = nil
	file_domain_address_delivery_grpc_address_address_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AddressHandlerClient is the client API for AddressHandler service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AddressHandlerClient interface {
	GetByGuid(ctx context.Context, in *GuidRequest, opts ...grpc.CallOption) (*Address, error)
	GetAllCities(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (AddressHandler_GetAllCitiesClient, error)
	GetCitiesByTerm(ctx context.Context, in *TermRequest, opts ...grpc.CallOption) (AddressHandler_GetCitiesByTermClient, error)
}

type addressHandlerClient struct {
	cc grpc.ClientConnInterface
}

func NewAddressHandlerClient(cc grpc.ClientConnInterface) AddressHandlerClient {
	return &addressHandlerClient{cc}
}

func (c *addressHandlerClient) GetByGuid(ctx context.Context, in *GuidRequest, opts ...grpc.CallOption) (*Address, error) {
	out := new(Address)
	err := c.cc.Invoke(ctx, "/address_grpc.AddressHandler/GetByGuid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *addressHandlerClient) GetAllCities(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (AddressHandler_GetAllCitiesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_AddressHandler_serviceDesc.Streams[0], "/address_grpc.AddressHandler/GetAllCities", opts...)
	if err != nil {
		return nil, err
	}
	x := &addressHandlerGetAllCitiesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type AddressHandler_GetAllCitiesClient interface {
	Recv() (*Address, error)
	grpc.ClientStream
}

type addressHandlerGetAllCitiesClient struct {
	grpc.ClientStream
}

func (x *addressHandlerGetAllCitiesClient) Recv() (*Address, error) {
	m := new(Address)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *addressHandlerClient) GetCitiesByTerm(ctx context.Context, in *TermRequest, opts ...grpc.CallOption) (AddressHandler_GetCitiesByTermClient, error) {
	stream, err := c.cc.NewStream(ctx, &_AddressHandler_serviceDesc.Streams[1], "/address_grpc.AddressHandler/GetCitiesByTerm", opts...)
	if err != nil {
		return nil, err
	}
	x := &addressHandlerGetCitiesByTermClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type AddressHandler_GetCitiesByTermClient interface {
	Recv() (*Address, error)
	grpc.ClientStream
}

type addressHandlerGetCitiesByTermClient struct {
	grpc.ClientStream
}

func (x *addressHandlerGetCitiesByTermClient) Recv() (*Address, error) {
	m := new(Address)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// AddressHandlerServer is the server API for AddressHandler service.
type AddressHandlerServer interface {
	GetByGuid(context.Context, *GuidRequest) (*Address, error)
	GetAllCities(*empty.Empty, AddressHandler_GetAllCitiesServer) error
	GetCitiesByTerm(*TermRequest, AddressHandler_GetCitiesByTermServer) error
}

// UnimplementedAddressHandlerServer can be embedded to have forward compatible implementations.
type UnimplementedAddressHandlerServer struct {
}

func (*UnimplementedAddressHandlerServer) GetByGuid(context.Context, *GuidRequest) (*Address, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetByGuid not implemented")
}
func (*UnimplementedAddressHandlerServer) GetAllCities(*empty.Empty, AddressHandler_GetAllCitiesServer) error {
	return status.Errorf(codes.Unimplemented, "method GetAllCities not implemented")
}
func (*UnimplementedAddressHandlerServer) GetCitiesByTerm(*TermRequest, AddressHandler_GetCitiesByTermServer) error {
	return status.Errorf(codes.Unimplemented, "method GetCitiesByTerm not implemented")
}

func RegisterAddressHandlerServer(s *grpc.Server, srv AddressHandlerServer) {
	s.RegisterService(&_AddressHandler_serviceDesc, srv)
}

func _AddressHandler_GetByGuid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GuidRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddressHandlerServer).GetByGuid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/address_grpc.AddressHandler/GetByGuid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddressHandlerServer).GetByGuid(ctx, req.(*GuidRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AddressHandler_GetAllCities_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(empty.Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(AddressHandlerServer).GetAllCities(m, &addressHandlerGetAllCitiesServer{stream})
}

type AddressHandler_GetAllCitiesServer interface {
	Send(*Address) error
	grpc.ServerStream
}

type addressHandlerGetAllCitiesServer struct {
	grpc.ServerStream
}

func (x *addressHandlerGetAllCitiesServer) Send(m *Address) error {
	return x.ServerStream.SendMsg(m)
}

func _AddressHandler_GetCitiesByTerm_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(TermRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(AddressHandlerServer).GetCitiesByTerm(m, &addressHandlerGetCitiesByTermServer{stream})
}

type AddressHandler_GetCitiesByTermServer interface {
	Send(*Address) error
	grpc.ServerStream
}

type addressHandlerGetCitiesByTermServer struct {
	grpc.ServerStream
}

func (x *addressHandlerGetCitiesByTermServer) Send(m *Address) error {
	return x.ServerStream.SendMsg(m)
}

var _AddressHandler_serviceDesc = grpc.ServiceDesc{
	ServiceName: "address_grpc.AddressHandler",
	HandlerType: (*AddressHandlerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetByGuid",
			Handler:    _AddressHandler_GetByGuid_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetAllCities",
			Handler:       _AddressHandler_GetAllCities_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetCitiesByTerm",
			Handler:       _AddressHandler_GetCitiesByTerm_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "domain/address/delivery/grpc/address/address.proto",
}
